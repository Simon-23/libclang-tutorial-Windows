# This is a basic workflow to help you get started with Actions

name: LibClang tutorial

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2

      # Install LLVM system-wide using GitHub utility
      - name: Install LLVM
        run: |
          curl -fsSL -o "LLVM-18.1.0-win64.exe" "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.0/LLVM-18.1.0-win64.exe"
          LLVM-18.1.0-win64.exe /S
          # Assuming the default installation path for LLVM
          $llvmConfigPath = "C:\\Program Files\\LLVM\\bin\\llvm-config.exe"
          if (!(Test-Path $llvmConfigPath)) {
            echo "llvm-config.exe not found at $llvmConfigPath"
            exit 1
          }
          echo "LLVM_CONFIG_EXECUTABLE=$llvmConfigPath" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PATH=$(dirname $llvmConfigPath);$env:Path" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Debug Check installed tools
      - name: Debug Check installed tools
        run: |
          echo "Check if LLVM is installed"
          where clang
          where llvm-config
          echo "Current PATH:"
          echo $env:Path

      # Configure Project
      - name: Configure Project
        shell: pwsh
        run: |
          Get-Content $env:GITHUB_ENV | ForEach-Object { 
            if ($_ -match "([^=]+)=(.+)") { 
              [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2]) 
            } 
          }
          cmake -DLLVM_CONFIG_EXECUTABLE=$env:LLVM_CONFIG_EXECUTABLE .

      # Build Project
      - name: Build Project
        shell: pwsh
        run: mingw32-make VERBOSE=1

      # List All Files in Repository
      - name: List All Files in Repository
        run: Get-ChildItem -Recurse $GITHUB_WORKSPACE | ForEach-Object { Write-Host $_.FullName }

      # Upload the hello-world binary as an artifact
      - name: Upload hello-world binary
        uses: actions/upload-artifact@v4
        with:
          name: hello-world-binary
          path: ${{ github.workspace }}\bin\hello-world.exe
