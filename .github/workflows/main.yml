# This is a basic workflow to help you get started with Actions

name: LibClang tutorial

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Run on Windows instead of Ubuntu
    runs-on: windows-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runner's shell

      - name: Debug Check installed tools
        run: |
          echo "Check if LLVM is installed"
          where clang
          where llvm-config
          echo "Current PATH:"
          echo $env:Path

      - name: Configure LLVM environment
        run: |
           # Check if llvm-config is found
          $llvmPath = where llvm-config
          if (-not $llvmPath) {
            throw "llvm-config not found. Ensure LLVM is installed and added to the PATH."
          }
          $llvmDir = [System.IO.Path]::GetDirectoryName($llvmPath)
          echo "LLVM Directory: $llvmDir"
          echo "LLVM_PREFIX=$llvmDir" >> $env:GITHUB_ENV
          echo "PATH=$llvmDir;$env:Path" >> $env:GITHUB_ENV
          echo "LDFLAGS=-L$llvmDir\lib" >> $env:GITHUB_ENV
          echo "CPPFLAGS=-I$llvmDir\include" >> $env:GITHUB_ENV

      - name: Verify LLVM Installation
        run: |
          $llvmPath = (where llvm-config).split("\n")[0]
          & $llvmPath --version

      - name: Configure Project
        run: |
          cmake .

      - name: Build Project
        run: |
          mingw32-make VERBOSE=1

      - name: List All Files in Repository
        run: |
          Get-ChildItem -Recurse $GITHUB_WORKSPACE | ForEach-Object { Write-Host $_.FullName }

      # Upload the hello-world binary as an artifact
      - name: Upload hello-world binary
        uses: actions/upload-artifact@v4
        with:
          name: hello-world-binary
          path: ${{ github.workspace }}\bin\hello-world.exe # path to the binary
