# This is a basic workflow to help you get started with Actions

name: LibClang tutorial

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2

      # Install Scoop
      - name: Install Scoop
        run: |
          iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
          $scoopPath = [Environment]::GetEnvironmentVariable('USERPROFILE') + '\scoop\shims'
          echo "Scoop installed at: $scoopPath"
          echo "PATH=$scoopPath;$env:Path" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Install LLVM and Ninja globally using Scoop
      - name: Install LLVM and Ninja
        run: scoop install ninja llvm --global

      # Manually set llvm-config path
      - name: Set llvm-config path
        run: |
          $llvmConfigPath = "C:\Program Files (x86)\Android\android-sdk\ndk\27.0.12077973\toolchains\llvm\prebuilt\windows-x86_64\bin\llvm-config.exe"
          echo "LLVM_CONFIG_EXECUTABLE=$llvmConfigPath" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PATH=$(dirname $llvmConfigPath);$env:Path" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Debug Check installed tools
      - name: Debug Check installed tools
        run: |
          echo "Check if LLVM is installed"
          where clang
          where llvm-config
          echo "Current PATH:"
          echo $env:Path

      # Configure Project
      - name: Configure Project
        shell: pwsh
        run: |
          Get-Content $env:GITHUB_ENV | ForEach-Object { 
            if ($_ -match "([^=]+)=(.+)") { 
              [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2]) 
            } 
          }
          cmake -DLLVM_CONFIG_EXECUTABLE=$env:LLVM_CONFIG_EXECUTABLE .

      # Build Project
      - name: Build Project
        shell: pwsh
        run: mingw32-make VERBOSE=1

      # List All Files in Repository
      - name: List All Files in Repository
        run: Get-ChildItem -Recurse $GITHUB_WORKSPACE | ForEach-Object { Write-Host $_.FullName }

      # Upload the hello-world binary as an artifact
      - name: Upload hello-world binary
        uses: actions/upload-artifact@v4
        with:
          name: hello-world-binary
          path: ${{ github.workspace }}\bin\hello-world.exe
