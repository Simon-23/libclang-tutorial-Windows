# This is a basic workflow to help you get started with Actions

name: LibClang tutorial

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Run on Windows instead of Ubuntu
    runs-on: windows-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install Scoop
      - name: Install Scoop
        run: |
          iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
          # Add Scoop to PATH for the current session
          $scoopPath = [Environment]::GetEnvironmentVariable('USERPROFILE') + '\scoop\shims'
          echo "Scoop installed at: $scoopPath"
          echo "PATH=$scoopPath;$env:Path" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Install LLVM and Ninja globally using Scoop
      - name: Install LLVM and Ninja
        run: scoop install ninja llvm --global

      # Add LLVM to the PATH
      - name: Add LLVM to PATH
        run: |
          $llvmInstallPath = (scoop prefix llvm) + "\bin"
          echo "LLVM installed at: $llvmInstallPath"
          
          # Append LLVM installation path to the PATH
          echo "LLVM_CONFIG_EXECUTABLE=$llvmInstallPath\llvm-config.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PATH=$llvmInstallPath;$env:Path" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Debug Check installed tools
      - name: Debug Check installed tools
        run: |
          echo "Check if LLVM is installed"
          where clang
          where llvm-config
          echo "Current PATH:"
          echo $env:Path

      # Configure Project
      - name: Configure Project
        shell: pwsh
        run: |
          # Load the environment variables from $GITHUB_ENV
          Get-Content $env:GITHUB_ENV | ForEach-Object { 
            if ($_ -match "([^=]+)=(.+)") { 
              [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2]) 
            } 
          }
          # Run CMake with the correct LLVM_CONFIG_EXECUTABLE
          cmake -DLLVM_CONFIG_EXECUTABLE=$env:LLVM_CONFIG_EXECUTABLE .

      # Build Project
      - name: Build Project
        shell: pwsh
        run: mingw32-make VERBOSE=1

      # List All Files in Repository
      - name: List All Files in Repository
        run: Get-ChildItem -Recurse $GITHUB_WORKSPACE | ForEach-Object { Write-Host $_.FullName }

      # Upload the hello-world binary as an artifact
      - name: Upload hello-world binary
        uses: actions/upload-artifact@v4
        with:
          name: hello-world-binary
          path: ${{ github.workspace }}\bin\hello-world.exe # path to the binary
